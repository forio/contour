import d3 from 'd3';
import * as nwt from '../utils/contour-utils';
import Contour from '../core/contour';

function pxToNumber(pixels) {
    // removes 'px' from end of padding -- padding is always translated into px
    return Number(pixels.slice(0, -2));
}

function title(data, layer, options) {
    var svg = d3.select(this.container[0][0].firstChild);
    var height = pxToNumber(svg.style('height'));
    var width = pxToNumber(svg.style('width'));
    var paddingTop = svg.style('padding-top');

    if (paddingTop === '0px') {
        svg.style('padding-top', '2rem');
        paddingTop = '32px';
    }

    paddingTop = pxToNumber(paddingTop);

    var textAnchor;
    var xVal;
    var yVal = -paddingTop / 2;

    switch (options.title.position) {
        case 'center':
            xVal = width / 2;
            textAnchor = "middle";
            break;
        case 'right':
            xVal = width;
            textAnchor = "end";
            break;
        default:
            xVal = 0;
            textAnchor = "start";
            break;
    }

    // Because the title isn't dependent on data, this takes the place of the d3 exit
    if (d3.select('.title-text')[0][0]) {
        svg.remove('.title-text');
    }
    svg.append('text')
        .attr('x', xVal)
        .attr('y', yVal)
        .classed('chart-title', true)
        .style('text-anchor', textAnchor)
        .text(options.title.text);
}

title.defaults = {
    title: {
        text: '',
        position: 'left'
    }
};

/**
* Adds a title to the Contour chart. By default, this will also add some padding to the top of the chart to make room for the title.
* If the chart already has padding, or if the user wants to style the text with CSS, they may have to style this themselves.
* The title can be accessed with the CSS class `chart-title`.
*
*
* **Note:** This chart will appear in images generated by `exportable`.
*
* ### Example:
*
*        new Contour({el: '.myChart', title: { text: 'First Seven Fibonacci Numbers', position: 'left' }})
*           .cartesian()
*           .trendLine([1, 1, 2, 3, 5, 7, 12])
*           .title()
*           .render();
*
* @name title(text, position, styles)
* @param {object|array} data Ignored!
* @param {object} options Configuration options particular to this visualization that override the defaults.
* @api public
*
*/

Contour.export('title', title);
